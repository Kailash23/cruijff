// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Auth.Flap Flap 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "height": 50,
            "marginBottom": 0,
            "marginLeft": 0,
            "marginRight": 0,
            "marginTop": 0,
            "position": "relative",
          },
        ]
      }
    >
      <View
        alignItems="center"
        justifyContent="center"
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
          ]
        }
      >
        <View
          bgColor="rgba(0,0,0,0)"
          height={null}
          midHeight={true}
          style={
            Array [
              Object {
                "backgroundColor": "#fff",
                "borderColor": "#e6e6e6",
                "borderStyle": "solid",
                "borderTopLeftRadius": 8,
                "borderTopRightRadius": 8,
                "borderWidth": 1,
                "height": "auto",
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
              },
              Object {
                "height": 50,
                "width": 164.62,
              },
            ]
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#fff",
              "borderTopColor": "#e6e6e6",
              "borderTopWidth": 1,
              "height": 20,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 30,
            },
          ]
        }
      />
      <View
        alignItems="center"
        justifyContent="center"
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "textAlign": "center",
              "top": 20,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#fff",
              },
              Object {
                "width": 161.62,
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  Object {
                    "color": "#000",
                    "fontFamily": "Rajdhani-SemiBold",
                    "fontSize": 18,
                    "lineHeight": NaN,
                  },
                  Object {
                    "textAlign": "center",
                  },
                ],
              ]
            }
          >
            I'm the title
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Auth.LoginEmailForm LoginEmailForm 1`] = `null`;

exports[`Storyshots Auth.SignupEmailForm SignupEmailForm 1`] = `null`;

exports[`Storyshots Backgrounds.FieldBackground FieldBackground 1`] = `null`;

exports[`Storyshots Backgrounds.ImageBackground ImageBackground Children 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#005537",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
    >
      <View
        pixels={32}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "height": 32,
              "width": "auto",
            },
          ]
        }
      />
      <View
        bgColor="rgba(0,0,0,0)"
        height={null}
        midHeight={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
            },
          ]
        }
      >
        <View
          alignItems="center"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <Image
            resizeMode="contain"
            style={
              Object {
                "flex": 1,
              }
            }
          />
        </View>
      </View>
      <View
        pixels={56}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "height": 56,
              "width": "auto",
            },
          ]
        }
      />
      <View>
        <Text>
          Hello, I'm the child
        </Text>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Backgrounds.LogoHeaderBackground LogoHeaderBackground green theme 1`] = `null`;

exports[`Storyshots Backgrounds.LogoHeaderBackground LogoHeaderBackground white theme 1`] = `null`;

exports[`Storyshots Common.AlertMsg AlertMsg error 1`] = `null`;

exports[`Storyshots Common.AlertMsg AlertMsg info 1`] = `null`;

exports[`Storyshots Common.AlertMsg AlertMsg info long text 1`] = `null`;

exports[`Storyshots Common.AlertMsg AlertMsg success 1`] = `null`;

exports[`Storyshots Common.AlertMsg AlertMsg warning 1`] = `null`;

exports[`Storyshots Common.Avatar Avatar no props 1`] = `null`;

exports[`Storyshots Common.Avatar Avatar with TEXT 1`] = `null`;

exports[`Storyshots Common.Avatar Avatar with USER 1`] = `null`;

exports[`Storyshots Common.AvatarPicker AvatarPicker with USER 1`] = `null`;

exports[`Storyshots Common.Block Block 1`] = `null`;

exports[`Storyshots Common.Block Block 100px fixed height 1`] = `null`;

exports[`Storyshots Common.Block Block 100px fixed height bgColor gray 1`] = `null`;

exports[`Storyshots Common.Calendar Calendar 1`] = `null`;

exports[`Storyshots Common.CapacityPicker CapacityPicker 1`] = `null`;

exports[`Storyshots Common.CapacityPickerField CapacityPickerField 1`] = `null`;

exports[`Storyshots Common.CapacityPickerField CapacityPickerField boxed size ML 1`] = `null`;

exports[`Storyshots Common.CapacityPickerField CapacityPickerField white theme 1`] = `null`;

exports[`Storyshots Common.CapacityPickerField CapacityPickerField with ERROR 1`] = `null`;

exports[`Storyshots Common.Checkbox Checkbox 1`] = `null`;

exports[`Storyshots Common.Checkbox Checkbox white theme 1`] = `null`;

exports[`Storyshots Common.DatePickerField DatePickerField 1`] = `null`;

exports[`Storyshots Common.DatePickerField DatePickerField boxed size ML dateFormat DD/MM/YYYY 1`] = `null`;

exports[`Storyshots Common.DatePickerField DatePickerField white theme 1`] = `null`;

exports[`Storyshots Common.Divider Divider 1`] = `null`;

exports[`Storyshots Common.Divider Divider row 1`] = `null`;

exports[`Storyshots Common.DotSpacer DotSpacer default size M 1`] = `null`;

exports[`Storyshots Common.DotSpacer DotSpacer size L 1`] = `null`;

exports[`Storyshots Common.DotSpacer DotSpacer size S 1`] = `null`;

exports[`Storyshots Common.Dropdown Dropdown 1`] = `null`;

exports[`Storyshots Common.Dropdown Dropdown with error 1`] = `null`;

exports[`Storyshots Common.Dropdown Dropdown with white theme 1`] = `null`;

exports[`Storyshots Common.Dropdown Dropdown with white theme size ML 1`] = `null`;

exports[`Storyshots Common.DurationPickerField DurationPickerField 1`] = `null`;

exports[`Storyshots Common.DurationPickerField DurationPickerField boxed size ML 1`] = `null`;

exports[`Storyshots Common.DurationPickerField DurationPickerField white theme 1`] = `null`;

exports[`Storyshots Common.HeaderBtn HeaderBtn 1`] = `null`;

exports[`Storyshots Common.InputField InputField Dropdown comp 1`] = `null`;

exports[`Storyshots Common.InputField InputField Dropdown comp DISABLED 1`] = `null`;

exports[`Storyshots Common.InputField InputField Dropdown comp boxed 1`] = `null`;

exports[`Storyshots Common.InputField InputField Dropdown comp boxed DISABLED 1`] = `null`;

exports[`Storyshots Common.InputField InputField Dropdown comp boxed with ERROR 1`] = `null`;

exports[`Storyshots Common.InputField InputField Dropdown comp with ERROR 1`] = `null`;

exports[`Storyshots Common.InputField InputField TextField comp 1`] = `null`;

exports[`Storyshots Common.InputField InputField TextField comp DISABLED 1`] = `null`;

exports[`Storyshots Common.InputField InputField TextField comp boxed 1`] = `null`;

exports[`Storyshots Common.InputField InputField TextField comp boxed DISABLED 1`] = `null`;

exports[`Storyshots Common.InputField InputField TextField comp boxed with ERROR 1`] = `null`;

exports[`Storyshots Common.InputField InputField TextField comp with ERROR 1`] = `null`;

exports[`Storyshots Common.InputField InputField size ML 1`] = `null`;

exports[`Storyshots Common.InputField InputField size S 1`] = `null`;

exports[`Storyshots Common.InputField InputField white theme 1`] = `null`;

exports[`Storyshots Common.Link Link 1`] = `null`;

exports[`Storyshots Common.Link Link with icon 1`] = `null`;

exports[`Storyshots Common.LinkOpenURL LinkOpenURL 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="rgba(0,0,0,0)"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(0,0,0,0)",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          justifyContent="space-between"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "space-between",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  Object {
                    "color": "#000",
                    "fontFamily": "Rajdhani-SemiBold",
                    "fontSize": 18,
                    "lineHeight": NaN,
                  },
                  Object {
                    "color": "black",
                    "textDecorationColor": "black",
                    "textDecorationLine": "none",
                    "textDecorationStyle": "solid",
                  },
                ],
              ]
            }
          >
            I'm the text
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.LinkOpenURL LinkOpenURL with icon 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="rgba(0,0,0,0)"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "rgba(0,0,0,0)",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          alignItems="center"
          justifyContent="space-between"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "space-between",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  Object {
                    "color": "#000",
                    "fontFamily": "Rajdhani-SemiBold",
                    "fontSize": 18,
                    "lineHeight": NaN,
                  },
                  Object {
                    "color": "black",
                    "textDecorationColor": "black",
                    "textDecorationLine": "none",
                    "textDecorationStyle": "solid",
                  },
                ],
              ]
            }
          >
            I'm the text
          </Text>
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.Logo Logo 1`] = `null`;

exports[`Storyshots Common.Menu Menu 1`] = `null`;

exports[`Storyshots Common.NavBar NavBar 1`] = `null`;

exports[`Storyshots Common.NavBarButton NavBarButton 1`] = `null`;

exports[`Storyshots Common.NavDot NavDot active 1`] = `null`;

exports[`Storyshots Common.NavDot NavDot default 1`] = `null`;

exports[`Storyshots Common.NavDots Default 1`] = `null`;

exports[`Storyshots Common.OrDivider OrDivider 1`] = `null`;

exports[`Storyshots Common.RaisedButton RaisedButton default 1`] = `null`;

exports[`Storyshots Common.RaisedButton RaisedButton default with icon 1`] = `null`;

exports[`Storyshots Common.RaisedButton RaisedButton disabled 1`] = `null`;

exports[`Storyshots Common.RaisedButton RaisedButton ghost 1`] = `null`;

exports[`Storyshots Common.RaisedButton RaisedButton ghost disabled 1`] = `null`;

exports[`Storyshots Common.RaisedButton RaisedButton info 1`] = `null`;

exports[`Storyshots Common.RaisedButton RaisedButton primary 1`] = `null`;

exports[`Storyshots Common.RaisedButton RaisedButton primary small 1`] = `null`;

exports[`Storyshots Common.RaisedButton RaisedButton secondary 1`] = `null`;

exports[`Storyshots Common.RaisedButton RaisedButton transparent 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      bgColor="green"
      height={null}
      midHeight={false}
      style={
        Array [
          Object {
            "backgroundColor": "green",
            "height": "auto",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          bgColor="rgba(0,0,0,0)"
          borderColor="#fff"
          disabled={false}
          size="M"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "rgba(0,0,0,0)",
                "borderColor": "#fff",
                "borderRadius": 8,
                "borderStyle": "solid",
                "borderWidth": 1,
                "display": "flex",
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
                "minWidth": 80,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <Text
            disabled={false}
            fontColor="#fff"
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  Object {
                    "color": "#000",
                    "fontFamily": "Rajdhani-SemiBold",
                    "fontSize": 18,
                    "lineHeight": NaN,
                  },
                  Array [
                    Object {
                      "color": "#fff",
                    },
                  ],
                ],
              ]
            }
          >
            label
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Common.RaisedButton RaisedButton warning 1`] = `null`;

exports[`Storyshots Common.RoundButton RoundButton dark 1`] = `null`;

exports[`Storyshots Common.RoundButton RoundButton default 1`] = `null`;

exports[`Storyshots Common.RoundButton RoundButton disabled 1`] = `null`;

exports[`Storyshots Common.RoundButton RoundButton ghost 1`] = `null`;

exports[`Storyshots Common.RoundButton RoundButton ghost disabled 1`] = `null`;

exports[`Storyshots Common.RoundButton RoundButton info 1`] = `null`;

exports[`Storyshots Common.RoundButton RoundButton primary 1`] = `null`;

exports[`Storyshots Common.RoundButton RoundButton primary reverse 1`] = `null`;

exports[`Storyshots Common.RoundButton RoundButton primary small 1`] = `null`;

exports[`Storyshots Common.RoundButton RoundButton secondary 1`] = `null`;

exports[`Storyshots Common.RoundButton RoundButton translucid 1`] = `null`;

exports[`Storyshots Common.RoundButton RoundButton warning 1`] = `null`;

exports[`Storyshots Common.RoundButton RoundButton warning reverse 1`] = `null`;

exports[`Storyshots Common.Row Row 1`] = `null`;

exports[`Storyshots Common.Slider Slider default 1`] = `null`;

exports[`Storyshots Common.Slider Slider initialValue 5 1`] = `null`;

exports[`Storyshots Common.SliderWithText SliderWithText 1`] = `null`;

exports[`Storyshots Common.Spacer Spacer size L 1`] = `null`;

exports[`Storyshots Common.Spacer Spacer size L row 1`] = `null`;

exports[`Storyshots Common.Spacer Spacer size M 1`] = `null`;

exports[`Storyshots Common.Spacer Spacer size M row 1`] = `null`;

exports[`Storyshots Common.Spacer Spacer size S 1`] = `null`;

exports[`Storyshots Common.Spacer Spacer size S row 1`] = `null`;

exports[`Storyshots Common.SportCard SportCard 1`] = `null`;

exports[`Storyshots Common.SportCard SportCard isSelected 1`] = `null`;

exports[`Storyshots Common.SportPickerField SportPickerField 1`] = `null`;

exports[`Storyshots Common.SportPickerField SportPickerField boxed size ML 1`] = `null`;

exports[`Storyshots Common.SportPickerField SportPickerField white theme 1`] = `null`;

exports[`Storyshots Common.SportsList SportsList 1`] = `null`;

exports[`Storyshots Common.SwitchWithText SwitchWithText 1`] = `null`;

exports[`Storyshots Common.Tag Tag error 1`] = `null`;

exports[`Storyshots Common.Tag Tag info 1`] = `null`;

exports[`Storyshots Common.Tag Tag info long text 1`] = `null`;

exports[`Storyshots Common.Tag Tag success 1`] = `null`;

exports[`Storyshots Common.Tag Tag warning 1`] = `null`;

exports[`Storyshots Common.TextField TextField 1`] = `null`;

exports[`Storyshots Common.TextField TextField disabled 1`] = `null`;

exports[`Storyshots Common.TextField TextField with MIX theme 1`] = `null`;

exports[`Storyshots Common.TextField TextField with WHITE theme 1`] = `null`;

exports[`Storyshots Common.TextField TextField with WHITE theme with ERROR 1`] = `null`;

exports[`Storyshots Common.TextField TextField with characterRestriction = 20 1`] = `null`;

exports[`Storyshots Common.TextField TextField with error 1`] = `null`;

exports[`Storyshots Common.TextField TextField with white theme size ML 1`] = `null`;

exports[`Storyshots DarkFooter DarkFooter NO Back button 1`] = `null`;

exports[`Storyshots DarkFooter DarkFooter default 1`] = `null`;

exports[`Storyshots DarkFooterButton DarkFooterButton BACK 1`] = `null`;

exports[`Storyshots DarkFooterButton DarkFooterButton NEXT 1`] = `null`;

exports[`Storyshots DarkFooterButton DarkFooterButton NEXT disabled 1`] = `null`;

exports[`Storyshots Games.AdminMenu AdminMenu 1`] = `null`;

exports[`Storyshots Games.Attendees Attendees 1`] = `null`;

exports[`Storyshots Games.CancelGameForm CancelGameForm 1`] = `null`;

exports[`Storyshots Games.CancelMsg CancelMsg 1`] = `null`;

exports[`Storyshots Games.ClickableAttendees ClickableAttendees 1`] = `null`;

exports[`Storyshots Games.EditGameForm EditGameForm 1`] = `null`;

exports[`Storyshots Games.GameCanceledFlag GameCanceledFlag 1`] = `null`;

exports[`Storyshots Games.GameDetails GameDetails CANCELED 1`] = `null`;

exports[`Storyshots Games.GameDetails GameDetails PLANNED 1`] = `null`;

exports[`Storyshots Games.GameListCard GameListCard CANCELED 1`] = `null`;

exports[`Storyshots Games.GameListCard GameListCard CANCELED short title/name 1`] = `null`;

exports[`Storyshots Games.GameListCard GameListCard PLANNED 1`] = `null`;

exports[`Storyshots Games.GameListCard GameListCard PLANNED short title/name 1`] = `null`;

exports[`Storyshots Games.GameProperties GameProperties 1`] = `null`;

exports[`Storyshots Games.GamesList GamesList 1`] = `null`;

exports[`Storyshots Games.ImageModal ImageModal CancelConfirmModal comp 1`] = `null`;

exports[`Storyshots Games.ImageModal ImageModal ConfirmModal comp 1`] = `null`;

exports[`Storyshots Games.OpenSpots OpenSpots 1`] = `null`;

exports[`Storyshots Games.Organizer Organizer M textSize 1`] = `null`;

exports[`Storyshots Games.Organizer Organizer S textSize 1`] = `null`;

exports[`Storyshots Games.Organizer Organizer default textSize (SM) 1`] = `null`;

exports[`Storyshots Games.ShareGameButton ShareGameButton default 1`] = `null`;

exports[`Storyshots ImageSwiper Default 1`] = `null`;

exports[`Storyshots Layouts.ClosableLayout ClosableLayout black theme 1`] = `null`;

exports[`Storyshots Layouts.ClosableLayout ClosableLayout white theme 1`] = `null`;

exports[`Storyshots Layouts.ClosableLayout ClosableLayout white theme NOT closable 1`] = `null`;

exports[`Storyshots Layouts.FixedTopLayout FixedTopLayout 1`] = `null`;

exports[`Storyshots Layouts.TopBottomLayout TopBottomLayout black theme 1`] = `null`;

exports[`Storyshots Modals.CancelConfirmModal CancelConfirmModal 1`] = `null`;

exports[`Storyshots Modals.CapacityPickerModal CapacityPickerModal 1`] = `null`;

exports[`Storyshots Modals.ConfirmModal ConfirmModal 1`] = `null`;

exports[`Storyshots Modals.DatePickerModal DatePickerModal 1`] = `null`;

exports[`Storyshots Modals.DialogModal DialogModal 1`] = `null`;

exports[`Storyshots Modals.DialogModal DialogModal big children 1`] = `null`;

exports[`Storyshots Modals.DialogModal DialogModal big children no header 1`] = `null`;

exports[`Storyshots Modals.Modal Modal no footer 1`] = `null`;

exports[`Storyshots Modals.Modal Modal no footer big children 1`] = `null`;

exports[`Storyshots Modals.Modal Modal no footer overflow children 1`] = `null`;

exports[`Storyshots Modals.SportPickerModal SportPickerModal 1`] = `null`;

exports[`Storyshots Modals.SpotPickerModal SpotPickerModal 1`] = `null`;

exports[`Storyshots NothingFound Default 1`] = `null`;

exports[`Storyshots Onboarding Default 1`] = `null`;

exports[`Storyshots Onboarding.LocationSlide LocationSlide 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#005537",
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
    >
      <View
        pixels={32}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "height": 32,
              "width": "auto",
            },
          ]
        }
      />
      <View
        bgColor="rgba(0,0,0,0)"
        height={null}
        midHeight={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
            },
          ]
        }
      >
        <View
          alignItems="center"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <Image
            resizeMode="contain"
            style={
              Object {
                "flex": 1,
              }
            }
          />
        </View>
      </View>
      <View
        pixels={56}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "height": 56,
              "width": "auto",
            },
          ]
        }
      />
      <View>
        <Text
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                Object {
                  "color": "#000",
                  "fontFamily": "Rajdhani-SemiBold",
                  "fontSize": 18,
                  "lineHeight": NaN,
                },
                Array [
                  Object {
                    "color": "#fff",
                    "textAlign": "center",
                  },
                ],
              ],
            ]
          }
        >
          locationSlide.title
        </Text>
      </View>
      <View
        pixels={16}
        row={false}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "height": 16,
              "width": "auto",
            },
          ]
        }
      />
      <View
        bgColor="rgba(0,0,0,0)"
        height={null}
        midHeight={false}
        style={
          Array [
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "height": "auto",
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
            },
            Object {
              "flex": 1,
            },
          ]
        }
      >
        <RCTScrollView
          ItemSeparatorComponent={[Function]}
          contentContainerStyle={
            Object {
              "flex": 1,
            }
          }
          data={
            Array [
              Object {
                "coords": Object {
                  "latitude": 52.3547321,
                  "longitude": 4.8284118,
                },
                "id": "amsterdam",
                "name": "Amsterdam",
              },
              Object {
                "coords": Object {
                  "latitude": 52.2233632,
                  "longitude": 6.7983365,
                },
                "id": "enschede",
                "name": "Enschede",
              },
              Object {
                "coords": Object {
                  "latitude": -34.6156624,
                  "longitude": -58.50351,
                },
                "id": "buenosAires",
                "name": "Buenos Aires",
              },
            ]
          }
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  bgColor="rgba(0,0,0,0)"
                  borderColor="#fff"
                  disabled={false}
                  size="M"
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "rgba(0,0,0,0)",
                        "borderColor": "#fff",
                        "borderRadius": 8,
                        "borderStyle": "solid",
                        "borderWidth": 1,
                        "display": "flex",
                        "flexDirection": "row",
                        "height": 48,
                        "justifyContent": "center",
                        "minWidth": 80,
                        "width": "100%",
                      },
                    ]
                  }
                  width="100%"
                >
                  <Text
                    disabled={false}
                    fontColor="#fff"
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                          },
                          Object {
                            "color": "#000",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "lineHeight": NaN,
                          },
                          Array [
                            Object {
                              "color": "#fff",
                            },
                          ],
                        ],
                      ]
                    }
                  >
                    Amsterdam
                  </Text>
                </View>
              </View>
              <View
                pixels={24}
                row={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": 24,
                      "width": "auto",
                    },
                  ]
                }
              />
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  bgColor="rgba(0,0,0,0)"
                  borderColor="#fff"
                  disabled={false}
                  size="M"
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "rgba(0,0,0,0)",
                        "borderColor": "#fff",
                        "borderRadius": 8,
                        "borderStyle": "solid",
                        "borderWidth": 1,
                        "display": "flex",
                        "flexDirection": "row",
                        "height": 48,
                        "justifyContent": "center",
                        "minWidth": 80,
                        "width": "100%",
                      },
                    ]
                  }
                  width="100%"
                >
                  <Text
                    disabled={false}
                    fontColor="#fff"
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                          },
                          Object {
                            "color": "#000",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "lineHeight": NaN,
                          },
                          Array [
                            Object {
                              "color": "#fff",
                            },
                          ],
                        ],
                      ]
                    }
                  >
                    Enschede
                  </Text>
                </View>
              </View>
              <View
                pixels={24}
                row={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": 24,
                      "width": "auto",
                    },
                  ]
                }
              />
            </View>
            <View
              onLayout={[Function]}
              style={null}
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  bgColor="rgba(0,0,0,0)"
                  borderColor="#fff"
                  disabled={false}
                  size="M"
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "rgba(0,0,0,0)",
                        "borderColor": "#fff",
                        "borderRadius": 8,
                        "borderStyle": "solid",
                        "borderWidth": 1,
                        "display": "flex",
                        "flexDirection": "row",
                        "height": 48,
                        "justifyContent": "center",
                        "minWidth": 80,
                        "width": "100%",
                      },
                    ]
                  }
                  width="100%"
                >
                  <Text
                    disabled={false}
                    fontColor="#fff"
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                          },
                          Object {
                            "color": "#000",
                            "fontFamily": "Rajdhani-SemiBold",
                            "fontSize": 18,
                            "lineHeight": NaN,
                          },
                          Array [
                            Object {
                              "color": "#fff",
                            },
                          ],
                        ],
                      ]
                    }
                  >
                    Buenos Aires
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Onboarding.OnboardingForm OnboardingForm 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "position": "relative",
            },
            undefined,
          ]
        }
      >
        <RCTScrollView
          automaticallyAdjustContentInsets={false}
          autoplay={false}
          autoplayDirection={true}
          autoplayTimeout={2.5}
          bounces={false}
          contentContainerStyle={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              undefined,
            ]
          }
          contentOffset={
            Object {
              "x": 0,
            }
          }
          disableNextButton={false}
          horizontal={true}
          index={0}
          loadMinimal={false}
          loadMinimalSize={1}
          loop={false}
          onIndexChanged={[Function]}
          onMomentumScrollEnd={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          pagingEnabled={true}
          removeClippedSubviews={true}
          scrollEnabled={false}
          scrollsToTop={false}
          showsButtons={false}
          showsHorizontalScrollIndicator={false}
          showsPagination={false}
          showsVerticalScrollIndicator={false}
        >
          <View>
            <View
              style={
                Array [
                  Object {
                    "height": 1334,
                    "width": 750,
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "flexShrink": 1,
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#005537",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                      },
                    ]
                  }
                >
                  <View
                    pixels={32}
                    row={false}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "height": 32,
                          "width": "auto",
                        },
                      ]
                    }
                  />
                  <View
                    bgColor="rgba(0,0,0,0)"
                    height={null}
                    midHeight={false}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "rgba(0,0,0,0)",
                          "height": "auto",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                        },
                      ]
                    }
                  >
                    <View
                      alignItems="center"
                      justifyContent="flex-start"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "display": "flex",
                            "flexDirection": "row",
                            "justifyContent": "flex-start",
                          },
                        ]
                      }
                    >
                      <Image
                        resizeMode="contain"
                        style={
                          Object {
                            "flex": 1,
                          }
                        }
                      />
                    </View>
                  </View>
                  <View
                    pixels={56}
                    row={false}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "height": 56,
                          "width": "auto",
                        },
                      ]
                    }
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "marginBottom": 0,
                          "marginLeft": "auto",
                          "marginRight": "auto",
                          "marginTop": 0,
                          "maxWidth": 280,
                          "width": "100%",
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                          },
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                            },
                            Object {
                              "color": "#000",
                              "fontFamily": "Rajdhani-SemiBold",
                              "fontSize": 32,
                              "lineHeight": NaN,
                            },
                            Array [
                              Object {
                                "color": "#fff",
                                "textAlign": "center",
                              },
                            ],
                          ],
                        ]
                      }
                    >
                      onboardingScreen.welcome.title
                    </Text>
                    <View
                      pixels={24}
                      row={false}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "height": 24,
                            "width": "auto",
                          },
                        ]
                      }
                    />
                    <Text
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                          },
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                            },
                            Object {
                              "color": "#000",
                              "fontFamily": "Rajdhani-SemiBold",
                              "fontSize": 18,
                              "lineHeight": NaN,
                            },
                            Array [
                              Object {
                                "color": "#fff",
                                "textAlign": "center",
                              },
                            ],
                          ],
                        ]
                      }
                    >
                      onboardingScreen.welcome.text
                    </Text>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "height": 1334,
                    "width": 750,
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "flexShrink": 1,
                    },
                  ]
                }
              >
                <View />
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "height": 1334,
                    "width": 750,
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "flexShrink": 1,
                    },
                  ]
                }
              >
                <View />
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "height": 1334,
                    "width": 750,
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "flexShrink": 1,
                    },
                  ]
                }
              >
                <View />
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#000",
              "height": 50,
            },
          ]
        }
      >
        <View
          alignItems="center"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexBasis": 0,
                "flexDirection": "row",
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
          <View
            alignItems="stretch"
            justifyContent="flex-start"
            style={
              Array [
                Object {
                  "alignItems": "stretch",
                  "display": "flex",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "flex-start",
                },
              ]
            }
          />
          <View
            alignItems="center"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "#f5a623",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(255,255,255,.2)",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(255,255,255,.2)",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(255,255,255,.2)",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            alignItems="stretch"
            justifyContent="flex-end"
            style={
              Array [
                Object {
                  "alignItems": "stretch",
                  "display": "flex",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "flex-end",
                },
              ]
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="footerNextButton"
            >
              <View
                alignItems="center"
                justifyContent="center"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  disabled={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                      },
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        Object {
                          "color": "#000",
                          "fontFamily": "Rajdhani-SemiBold",
                          "fontSize": 18,
                          "lineHeight": NaN,
                        },
                        Array [
                          Object {
                            "color": "#fff",
                            "textAlign": "center",
                          },
                        ],
                      ],
                    ]
                  }
                >
                  ONBOARDINGSCREEN.NEXTBTNLABEL
                </Text>
                <View
                  pixels={4}
                  row={true}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "height": "auto",
                        "width": 4,
                      },
                    ]
                  }
                />
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": "#fff",
                        "fontSize": 27,
                      },
                      undefined,
                      Object {
                        "fontFamily": "Material Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
          </View>
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots PlanGame.DescriptionSlide DescriptionSlide white theme 1`] = `null`;

exports[`Storyshots PlanGame.InviteOnly InviteOnly isPrivate 1`] = `null`;

exports[`Storyshots PlanGame.InviteOnly InviteOnly isPublic 1`] = `null`;

exports[`Storyshots PlanGame.ShareGameForm ShareGameForm white theme 1`] = `null`;

exports[`Storyshots PlanGame.ShareLink ShareLink 1`] = `null`;

exports[`Storyshots PlanGame.ShareLink ShareLink long link 1`] = `null`;

exports[`Storyshots PlanGame.SpotSlide SpotSlide white theme 1`] = `null`;

exports[`Storyshots Profile.EditProfileForm EditProfileForm 1`] = `null`;

exports[`Storyshots Profile.ProfileDetails ProfileDetails 1`] = `null`;

exports[`Storyshots Profile.ProfileEditScreen ProfileEditScreen 1`] = `null`;

exports[`Storyshots Profile.ProfileTabs ProfileTabs 1`] = `null`;

exports[`Storyshots Profile.UserMenu UserMenu 1`] = `null`;

exports[`Storyshots Profile.UserSpots UserSpots 1`] = `null`;

exports[`Storyshots Rating 1 1`] = `null`;

exports[`Storyshots Rating 3 1`] = `null`;

exports[`Storyshots Rating 4.5 1`] = `null`;

exports[`Storyshots RatingBig 1 1`] = `null`;

exports[`Storyshots RatingBig 3 1`] = `null`;

exports[`Storyshots RatingBig 4.5 1`] = `null`;

exports[`Storyshots Screen.Auth CheckEmailScreen LOGIN 1`] = `null`;

exports[`Storyshots Screen.Auth CheckEmailScreen SIGNUP 1`] = `null`;

exports[`Storyshots Screen.Auth LoginEmailScreen 1`] = `null`;

exports[`Storyshots Screen.Auth LoginScreen 1`] = `null`;

exports[`Storyshots Screen.Auth SignupEmailScreen 1`] = `null`;

exports[`Storyshots Screen.Auth SignupScreen 1`] = `null`;

exports[`Storyshots Screens SplashScreen 1`] = `null`;

exports[`Storyshots Screens.Auth LoggedOutScreen 1`] = `null`;

exports[`Storyshots Screens.Auth LoggedOutScreen closable 1`] = `null`;

exports[`Storyshots Screens.Debug DebugScreen 1`] = `null`;

exports[`Storyshots Screens.Games CancelGameScreen 1`] = `null`;

exports[`Storyshots Screens.Games EditGameScreen 1`] = `null`;

exports[`Storyshots Screens.Games GameDetailsScreen 1`] = `null`;

exports[`Storyshots Screens.Games GamesListScreen 1`] = `null`;

exports[`Storyshots Screens.Games PlayersListScreen 1`] = `null`;

exports[`Storyshots Screens.Info InfoScreen 1`] = `null`;

exports[`Storyshots Screens.Plan.OnboardingScreen OnboardingScreen 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
              "position": "relative",
            },
            undefined,
          ]
        }
      >
        <RCTScrollView
          automaticallyAdjustContentInsets={false}
          autoplay={false}
          autoplayDirection={true}
          autoplayTimeout={2.5}
          bounces={false}
          contentContainerStyle={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              undefined,
            ]
          }
          contentOffset={
            Object {
              "x": 0,
            }
          }
          disableNextButton={false}
          horizontal={true}
          index={0}
          loadMinimal={false}
          loadMinimalSize={1}
          loop={false}
          onIndexChanged={[Function]}
          onMomentumScrollEnd={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          pagingEnabled={true}
          removeClippedSubviews={true}
          scrollEnabled={false}
          scrollsToTop={false}
          showsButtons={false}
          showsHorizontalScrollIndicator={false}
          showsPagination={false}
          showsVerticalScrollIndicator={false}
        >
          <View>
            <View
              style={
                Array [
                  Object {
                    "height": 1334,
                    "width": 750,
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "flexShrink": 1,
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#005537",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                      },
                    ]
                  }
                >
                  <View
                    pixels={32}
                    row={false}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "height": 32,
                          "width": "auto",
                        },
                      ]
                    }
                  />
                  <View
                    bgColor="rgba(0,0,0,0)"
                    height={null}
                    midHeight={false}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "rgba(0,0,0,0)",
                          "height": "auto",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                        },
                      ]
                    }
                  >
                    <View
                      alignItems="center"
                      justifyContent="flex-start"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "display": "flex",
                            "flexDirection": "row",
                            "justifyContent": "flex-start",
                          },
                        ]
                      }
                    >
                      <Image
                        resizeMode="contain"
                        style={
                          Object {
                            "flex": 1,
                          }
                        }
                      />
                    </View>
                  </View>
                  <View
                    pixels={56}
                    row={false}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "height": 56,
                          "width": "auto",
                        },
                      ]
                    }
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "marginBottom": 0,
                          "marginLeft": "auto",
                          "marginRight": "auto",
                          "marginTop": 0,
                          "maxWidth": 280,
                          "width": "100%",
                        },
                      ]
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                          },
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                            },
                            Object {
                              "color": "#000",
                              "fontFamily": "Rajdhani-SemiBold",
                              "fontSize": 32,
                              "lineHeight": NaN,
                            },
                            Array [
                              Object {
                                "color": "#fff",
                                "textAlign": "center",
                              },
                            ],
                          ],
                        ]
                      }
                    >
                      onboardingScreen.welcome.title
                    </Text>
                    <View
                      pixels={24}
                      row={false}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "height": 24,
                            "width": "auto",
                          },
                        ]
                      }
                    />
                    <Text
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                          },
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                            },
                            Object {
                              "color": "#000",
                              "fontFamily": "Rajdhani-SemiBold",
                              "fontSize": 18,
                              "lineHeight": NaN,
                            },
                            Array [
                              Object {
                                "color": "#fff",
                                "textAlign": "center",
                              },
                            ],
                          ],
                        ]
                      }
                    >
                      onboardingScreen.welcome.text
                    </Text>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "height": 1334,
                    "width": 750,
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "flexShrink": 1,
                    },
                  ]
                }
              >
                <View />
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "height": 1334,
                    "width": 750,
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "flexShrink": 1,
                    },
                  ]
                }
              >
                <View />
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "height": 1334,
                    "width": 750,
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "flexShrink": 1,
                    },
                  ]
                }
              >
                <View />
              </View>
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#000",
              "height": 50,
            },
          ]
        }
      >
        <View
          alignItems="center"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexBasis": 0,
                "flexDirection": "row",
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "flex-start",
              },
            ]
          }
        >
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
          <View
            alignItems="stretch"
            justifyContent="flex-start"
            style={
              Array [
                Object {
                  "alignItems": "stretch",
                  "display": "flex",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "flex-start",
                },
              ]
            }
          />
          <View
            alignItems="center"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "#f5a623",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(255,255,255,.2)",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(255,255,255,.2)",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
            <View
              alignItems="center"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
              <View
                active={false}
                style={
                  Array [
                    Object {
                      "backgroundColor": "rgba(255,255,255,.2)",
                      "borderRadius": 10,
                      "height": 10,
                      "width": 10,
                    },
                  ]
                }
              />
              <View
                pixels={4}
                row={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "height": "auto",
                      "width": 4,
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            alignItems="stretch"
            justifyContent="flex-end"
            style={
              Array [
                Object {
                  "alignItems": "stretch",
                  "display": "flex",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "flex-end",
                },
              ]
            }
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="footerNextButton"
            >
              <View
                alignItems="center"
                justifyContent="center"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  disabled={false}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                      },
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        Object {
                          "color": "#000",
                          "fontFamily": "Rajdhani-SemiBold",
                          "fontSize": 18,
                          "lineHeight": NaN,
                        },
                        Array [
                          Object {
                            "color": "#fff",
                            "textAlign": "center",
                          },
                        ],
                      ],
                    ]
                  }
                >
                  ONBOARDINGSCREEN.NEXTBTNLABEL
                </Text>
                <View
                  pixels={4}
                  row={true}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "height": "auto",
                        "width": 4,
                      },
                    ]
                  }
                />
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": "#fff",
                        "fontSize": 27,
                      },
                      undefined,
                      Object {
                        "fontFamily": "Material Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
          </View>
          <View
            pixels={4}
            row={true}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "height": "auto",
                  "width": 4,
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Storyshots Screens.Plan.ShareGameScreen ShareGameScreen 1`] = `null`;

exports[`Storyshots Screens.Spots SpotsFilterScreen 1`] = `null`;

exports[`Storyshots Screens.Spots SpotsListScreen 1`] = `null`;

exports[`Storyshots Screenslider ScreenSlider 1`] = `null`;

exports[`Storyshots Spots.BackgroundImage BackgroundImage 1`] = `null`;

exports[`Storyshots Spots.SpotHeader SpotHeader default 1`] = `null`;

exports[`Storyshots Spots.SpotHeader SpotHeader withDistance withGames 1`] = `null`;

exports[`Storyshots Spots.SpotHeader SpotHeader withDistance withGames gray 1`] = `null`;

exports[`Storyshots Spots.SpotImage SpotImage 1`] = `null`;

exports[`Storyshots Spots.SpotLink SpotLink 1`] = `null`;

exports[`Storyshots Spots.SpotListCard SpotListCard 1`] = `null`;

exports[`Storyshots Spots.SpotListCardSmall SpotListCardSmall active 1`] = `null`;

exports[`Storyshots Spots.SpotListCardSmall SpotListCardSmall default 1`] = `null`;

exports[`Storyshots Spots.SpotMap SpotMap 1`] = `null`;

exports[`Storyshots Spots.SpotPickerField SpotPickerField default 1`] = `null`;

exports[`Storyshots Spots.SpotProperties SpotProperties 1`] = `null`;

exports[`Storyshots Spots.SpotsFilterFlap SpotsFilterFlap 1`] = `null`;

exports[`Storyshots Spots.SpotsList SpotsList big card 1`] = `null`;

exports[`Storyshots Spots.SpotsList SpotsList small card 1`] = `null`;

exports[`Storyshots Text All sizes 1`] = `null`;

exports[`Storyshots Text Default text 1`] = `null`;

exports[`Storyshots Text Large text 1`] = `null`;

exports[`Storyshots Text Medium text 1`] = `null`;

exports[`Storyshots Text Small text 1`] = `null`;
